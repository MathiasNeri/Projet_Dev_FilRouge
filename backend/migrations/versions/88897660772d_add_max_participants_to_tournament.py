"""add max_participants to tournament

Revision ID: 88897660772d
Revises: 8a3be37d669e
Create Date: 2025-05-09 18:02:41.266719

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '88897660772d'
down_revision = '8a3be37d669e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tournament', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('game_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('format',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('tournament_participant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('joined_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.create_unique_constraint('unique_tournament_participant', ['tournament_id', 'user_id'])
        batch_op.drop_column('created_at')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=256),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=256),
               type_=sa.VARCHAR(length=128),
               nullable=True)

    with op.batch_alter_table('tournament_participant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint('unique_tournament_participant', type_='unique')
        batch_op.alter_column('status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.drop_column('joined_at')

    with op.batch_alter_table('tournament', schema=None) as batch_op:
        batch_op.alter_column('end_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('format',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('game_type',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###
